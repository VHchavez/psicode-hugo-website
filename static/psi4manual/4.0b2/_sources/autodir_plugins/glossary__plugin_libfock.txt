
.. include:: /autodoc_abbr_options_c.rst
.. include:: /autodoc_abbr_options_plugins.rst

.. glossary::
   :sorted:

   PRINT (PLUGIN_FOCK)
      The amount of information printed to the output file 

      * **Type**: integer
      * **Default**: 1

   DEBUG (PLUGIN_FOCK)
      The amount of debug information printed to the output file 

      * **Type**: integer
      * **Default**: 0

   MODULE (PLUGIN_FOCK)
      What app to test? 

      * **Type**: string
      * **Possible Values**: RCIS, RCPHF, RTDHF
      * **Default**: RCIS

   DO_SINGLETS (PLUGIN_FOCK)
      Do singlet states? Default true 

      * **Type**: :ref:`boolean <op_c_boolean>`
      * **Default**: true

   DO_TRIPLETS (PLUGIN_FOCK)
      Do triplet states? Default true 

      * **Type**: :ref:`boolean <op_c_boolean>`
      * **Default**: true

   EXPLICIT_HAMILTONIAN (PLUGIN_FOCK)
      Do explicit hamiltonian only? 

      * **Type**: :ref:`boolean <op_c_boolean>`
      * **Default**: false

   CIS_AMPLITUDE_CUTOFF (PLUGIN_FOCK)
      Minimum singles amplitude to print in  CIS analysis 

      * **Type**: double
      * **Default**: 0.15

   TDHF_MEM_SAFETY_FACTOR (PLUGIN_FOCK)
      Memory safety factor for allocating JK 

      * **Type**: double
      * **Default**: 0.75

   CIS_MEM_SAFETY_FACTOR (PLUGIN_FOCK)
      Memory safety factor for allocating JK 

      * **Type**: double
      * **Default**: 0.75

   CPHF_MEM_SAFETY_FACTOR (PLUGIN_FOCK)
      Memory safety factor for allocating JK 

      * **Type**: double
      * **Default**: 0.75

   CIS_OPDM_STATES (PLUGIN_FOCK)
      Which states to save AO OPDMs for? *   Positive - Singlets *   Negative - Triplets * 

      * **Type**: array
      * **Default**: No Default

   CIS_TOPDM_STATES (PLUGIN_FOCK)
      Which states to save AO transition OPDMs for? *   Positive - Singlets *   Negative - Triplets * 

      * **Type**: array
      * **Default**: No Default

   CIS_DOPDM_STATES (PLUGIN_FOCK)
      Which states to save AO difference OPDMs for? *   Positive - Singlets *   Negative - Triplets * 

      * **Type**: array
      * **Default**: No Default

   CIS_NO_STATES (PLUGIN_FOCK)
      Which states to save AO Natural Orbitals for? *   Positive - Singlets *   Negative - Triplets * 

      * **Type**: array
      * **Default**: No Default

   CIS_AD_STATES (PLUGIN_FOCK)
      Which states to save AD Matrices for? *   Positive - Singlets *   Negative - Triplets * 

      * **Type**: array
      * **Default**: No Default

   CPHF_TASKS (PLUGIN_FOCK)
      Which tasks to run CPHF For *  Valid choices: *  -Polarizability * 

      * **Type**: array
      * **Default**: No Default

   PRINT (JK)
      The amount of information printed to the output file 

      * **Type**: integer
      * **Default**: 1

   DEBUG (JK)
      The amount of debug information printed to the output file 

      * **Type**: integer
      * **Default**: 0

   OMP_N_THREAD (JK)
      The maximum number of integral threads (0 for omp_get_max_threads())  

      * **Type**: integer
      * **Default**: 0

   SCHWARZ_CUTOFF (JK)
      The schwarz cutoff value  

      * **Type**: double
      * **Default**: 1.0e-12

   FITTING_CONDITION (JK)
      The maximum reciprocal condition allowed in the fitting metric  

      * **Type**: double
      * **Default**: 1.0e-12

   FITTING_ALGORITHM (JK)
      Fitting algorithm (0 for old, 1 for new) 

      * **Type**: integer
      * **Default**: 0

   SCF_TYPE (JK)
      SCF Type  

      * **Type**: string
      * **Possible Values**: DIRECT, DF, GPUDF
      * **Default**: DIRECT

   RI_BASIS_SCF (JK)
      Auxiliary basis for SCF  

      * **Type**: string
      * **Default**: No Default

   PRINT (SOLVER)
      The amount of information printed to the output file 

      * **Type**: integer
      * **Default**: 1

   DEBUG (SOLVER)
      The amount of debug information printed to the output file 

      * **Type**: integer
      * **Default**: 0

   SOLVER_MAXITER (SOLVER)
      Solver maximum iterations 

      * **Type**: integer
      * **Default**: 100

   SOLVER_CONVERGENCE (SOLVER)
      Solver convergence threshold (max 2-norm).  See the note at the beginning of Section \ref{keywords}. 

      * **Type**: :ref:`conv double <op_c_conv>`
      * **Default**: 1.0e-6

   SOLVER_N_ROOT (SOLVER)
      DL Solver number of roots  

      * **Type**: integer
      * **Default**: 1

   SOLVER_N_GUESS (SOLVER)
      DL Solver number of guesses 

      * **Type**: integer
      * **Default**: 1

   SOLVER_MIN_SUBSPACE (SOLVER)
      DL Solver number of subspace vectors to collapse to 

      * **Type**: integer
      * **Default**: 2

   SOLVER_MAX_SUBSPACE (SOLVER)
      DL Solver maximum number of subspace vectors  

      * **Type**: integer
      * **Default**: 6

   SOLVER_NORM (SOLVER)
      DL Solver minimum corrector norm to add to subspace 

      * **Type**: double
      * **Default**: 1.0e-6

   SOLVER_PRECONDITION (SOLVER)
      CG Solver Jacobi precondition? 

      * **Type**: :ref:`boolean <op_c_boolean>`
      * **Default**: true



