
.. include:: /autodoc_abbr_options_c.rst
.. include:: /autodoc_abbr_options_plugins.rst

.. glossary::
   :sorted:

   PRINT (PLUGIN_OMEGA)
      The amount of information printed to the output file 

      * **Type**: integer
      * **Default**: 1

   DEBUG (PLUGIN_OMEGA)
      The amount of information printed to the output file 

      * **Type**: integer
      * **Default**: 0

   OMEGA_PROCEDURE (PLUGIN_OMEGA)
      The Omega optimization procedure 

      * **Type**: string
      * **Possible Values**: IP
      * **Default**: IP

   OMEGA_ROOT_ALGORITHM (PLUGIN_OMEGA)
      The Omega optimization root-finding algorithm 

      * **Type**: string
      * **Possible Values**: BISECTION, REGULA_FALSI, REGULA_FALSI2, REGULA_FALSI3, BRENT
      * **Default**: REGULA_FALSI3

   OMEGA_MAXITER (PLUGIN_OMEGA)
      Maximum number of omega iterations to perform 

      * **Type**: integer
      * **Default**: 30

   OMEGA_GUESS (PLUGIN_OMEGA)
      Procedure used to guess initial omega 

      * **Type**: string
      * **Possible Values**: HOMO_SIZE, DEFAULT
      * **Default**: HOMO_SIZE

   OMEGA_GUESS_A (PLUGIN_OMEGA)
      a in w_0^-1 = a <R>_HOMO + b 

      * **Type**: double
      * **Default**: 2.0

   OMEGA_GUESS_B (PLUGIN_OMEGA)
      b in w_0^-1 = a <R>_HOMO + b 

      * **Type**: double
      * **Default**: 0.0

   OMEGA_BRACKET_ALPHA (PLUGIN_OMEGA)
      Multiplier to use to backet omega (>1) 

      * **Type**: double
      * **Default**: 2.0

   OMEGA_CONVERGE (PLUGIN_OMEGA)
      Convergence threshold for omega, 10^-thresh.  See the note at the beginning of Section \ref{keywords}. 

      * **Type**: :ref:`conv double <op_c_conv>`
      * **Default**: 1e-3

   OMEGA_GUESS_INTERPOLATE (PLUGIN_OMEGA)
      Interpolate Fock matrices at omega steps? 

      * **Type**: :ref:`boolean <op_c_boolean>`
      * **Default**: true

   DFT_FUNCTIONAL (PLUGIN_OMEGA)
      The Omega functional selected for this procedure 

      * **Type**: string
      * **Default**: No Default



